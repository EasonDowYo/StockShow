

@{
    Layout = "/Views/Shared/myHomeLayout.cshtml";
    ViewBag.Title = "[Stock Trend]";
}
<link rel="stylesheet" href="~/lib/tablefilter/style/tablefilter.css" />
<script type="text/javascript" src="~/lib/tablefilter/tablefilter.js"></script>
<!--Load the AJAX API-->
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<style>
    #StockNo_tableID caption {
        caption-side: top;
    }
</style>



@*@(ViewContext.RouteData.Values["Controller"].ToString())
@(ViewContext.RouteData.Values["Action"].ToString())
*@
@*<div style="width:500px; height:100px; background-color:red"></div>*@


<div class="d-flex flex-row">

    <!-- Stock Type dropdown list -->
    <p class="p-2">Stock Type</p>
    <select asp-items="@ViewBag.STKTypeList" id="stkType_select" onchange="UpdateSelectStockNoChange()">
        <option>Please select one</option>
    </select>
    <!-- Stock Number dropdown list -->
    <p class ="p-2">Stock Number</p>
    <select asp-items="@ViewBag.STKNoList" id="stkNo_select" onchange="">
        <option>Please select one</option>
    </select>

    <p class="p-2">Days</p>
    <select id="StockNoDays_select">
        <option value="15" selected>15</option>
        <option value="30">30</option>
        <option value="60">60</option>
        <option value="120">120</option>
        <option value="240">240</option>
    </select>
    <button onclick="PlotStockDataChart()">PLOT</button>
</div>
    
    <div id="StockTrend_chartID"></div>

    <table id="StockNo_tableID"> </table>

<script type="text/javascript">
    // ================= INITIALIZE ==================
    let selectElement = document.getElementById("stkType_select");
    selectElement.selectedIndex = 1;
    selectElement = document.getElementById("stkNo_select");
    selectElement.selectedIndex = 1;

    // Load the Visualization API and the corechart package.
    google.charts.load('current', { 'packages': ['corechart'] });


    window.onload = async function () {
        let stkdata_forplot = [];
        let result = [];
        const postObj = {
            stockNo: "2330",
            days: 5
        };
        const requestOptions = {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(postObj) // Object to JSON

        };
        const response = await fetch("Get5DaysData_Post", requestOptions)
            .then(response => response.json())
            .then(data => {
                result = JSON.parse(data);
            }).catch(error => {
                return error;
            });
        // result 已經是fetch的答案
        console.log("Fetch response");
        console.log(response);
        console.log("BBBB");
        console.log(result);

        // Create plot data
        result.forEach(o => {
            stkdata_forplot.push([o.RecordDate, o.LowestPrice, o.OpenningPrice, o.ClosingPrice, o.HighestPrice]);
        });



        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawStockCandleChart(stkdata_forplot));

        //BuildStockNoTable();
    }


    function drawStockCandleChart(plotdata) {

        // Create the data table.
        //var data = google.visualization.arrayToDataTable([
        //    ['Mon', 20, 28, 38, 45],
        //    ['Tue', 31, 38, 55, 66],
        //    ['Wed', 50, 55, 77, 80],
        //    ['Thu', 77, 77, 66, 50],
        //    ['Fri', 68, 66, 22, 15]
        //    // Treat first row as data as well.
        //], true);
        var data = google.visualization.arrayToDataTable(plotdata, true);
        // Set chart options
        var options = {
            legend: 'none',
            height:600,
            bar: { groupWidth: '100%' }, // Remove space between bars.
            candlestick: {
                fallingColor: { strokeWidth: 0, fill: '#a52714' }, // red
                risingColor: { strokeWidth: 0, fill: '#0f9d58' }   // green
            }
        };

        // Instantiate and draw our chart, passing in some options.
        var chart = new google.visualization.CandlestickChart(document.getElementById('StockTrend_chartID'));
        chart.draw(data, options);
    }

    async function BuildStockNoTable() {

        let result = [];

        const requestOptions = {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
        };
        const response = await fetch("GetStockNoData_Post", requestOptions)
            .then(response => response.json())
            .then(data => {
                result = JSON.parse(data);
            }).catch(error => {
                return error;
            });

        BuildTable(result, "StockNo_tableID");

        let tfconfig = {
            paging: {
                results_per_page: ["Records: ", [10, 25, 50, 100]],
            },
            auto_filter: {
                delay: 100, //milliseconds
            },
            btn_reset: true,
            extensions: [{ name: "sort" }],
        };
        let tf = new TableFilter("StockNo_tableID", tfconfig);
        tf.init();
    }

    function BuildTable(data, target) {
        let table = document.getElementById(target);
        table.style.border = "3px solid red";
        let columnNames = Object.keys(data[0]);
        // Create Rows
        for (let i = 0; i < data.length; i++) {// i is Row number
            let row = table.insertRow(i);
            for (let j = 0; j < columnNames.length; j++) {
                let cell = row.insertCell(j);// j is Column number
                cell.innerHTML = data[i][columnNames[j]];
            }
        }

        // Create Header
        let header = table.createTHead();
        let header_row = header.insertRow(0);
        for (let i = 0; i < columnNames.length; i++) {
            let header_cell = header_row.insertCell(i);
            header_cell.innerHTML = columnNames[i];
        }

        let td_el = document.querySelectorAll('td');
        for (let ii = 0; ii < td_el.length; ii++) {
            td_el[ii].style.border = "1px solid green";
        }
    }

    async function UpdateSelectStockNoChange() {
        let result = [];
        let stkTypeSelect = document.getElementById("stkType_select");
        let value = stkTypeSelect.value;
        let text = stkTypeSelect.options[stkTypeSelect.selectedIndex].text;

        const requestOptions = {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            //body: JSON.stringify(postObj) // Object to JSON

        };
        const response = await fetch("/StockNoTables/GetStockNo_byStockTypeIndex?stockTypeIndex=" + value, requestOptions)
            .then(response => response.json())
            .then(data => {
                result = JSON.parse(data);
            }).catch(error => {
                return error;
            });

        // result 已經是fetch的答案
        console.log("UpdateSelectStockNoChange Fetch result");
        console.log(response);
        console.log("UpdateSelectStockNoChange result");
        console.log(result);
        let select = document.getElementById("stkNo_select");
        select.options.length = 0;
        result.forEach(o => {
            let option = document.createElement("option");
            option.text = o.Text;
            option.value = o.Value;
            select.add(option);
        })

    }

    async function PlotStockDataChart() {
        let result = [];
        let stkdata_forplot = [];
        let stkNoSelect = document.getElementById("stkNo_select");
        let stockNO = stkNoSelect.value;
        let daySelect = document.getElementById("StockNoDays_select");
        let days = daySelect.value;

        const requestOptions = {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            //body: JSON.stringify(postObj) // Object to JSON
        };
        const response = await fetch("/StockDataTable/GetStockData_ByStockNo?StockNo=" + stockNO + "&days=" + days, requestOptions)
            .then(response => response.json())
            .then(data => {
                result = JSON.parse(data);
            }).catch(error => {
                return error;
            });

        // result 已經是fetch的答案
        console.log("PlotStockDataChart Fetch result");
        console.log(response);
        console.log("PlotStockDataChart result");
        console.log(result);
        
        // Create plot data
        result.forEach(o => {
            stkdata_forplot.push([o.RecordDate, o.LowestPrice, o.OpenningPrice, o.ClosingPrice, o.HighestPrice]);
        });

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawStockCandleChart(stkdata_forplot));
    }


</script>